// const express = require("express");
// const baseRoute = require("./api/routes")

// module.exports = (app) => {
//   let router = express.Router();
//     app.use('/api',baseRoute(router));
   
//   };



//   <ref *2> ServerResponse {
//     _events: [Object: null prototype] { finish: [Function: bound resOnFinish] },
//     _eventsCount: 1,
//     _maxListeners: undefined,
//     outputData: [],
//     outputSize: 0,
//     writable: true,
//     destroyed: false,
//     _last: false,
//     chunkedEncoding: false,
//     shouldKeepAlive: true,
//     _defaultKeepAlive: true,
//     useChunkedEncodingByDefault: true,
//     sendDate: true,
//     _removedConnection: false,
//     _removedContLen: false,
//     _removedTE: false,
//     _contentLength: null,
//     _hasBody: true,
//     _trailer: '',
//     finished: false,
//     _headerSent: false,
//     socket:  {
//       connecting: false,
//       _hadError: false,
//       _parent: null,
//       _host: null,
//       _readableState: ReadableState {
//         objectMode: false,
//         highWaterMark: 16384,
//         buffer: BufferList { head: null, tail: null, length: 0 },
//         length: 0,
//         pipes: [],
//         flowing: true,
//         ended: false,
//         endEmitted: false,
//         reading: true,
//         sync: false,
//         needReadable: true,
//         emittedReadable: false,
//         readableListening: false,
//         resumeScheduled: false,
//         errorEmitted: false,
//         emitClose: false,
//         autoDestroy: false,
//         destroyed: false,
//         errored: null,
//         closed: false,
//         closeEmitted: false,
//         defaultEncoding: 'utf8',
//         awaitDrainWriters: null,
//         multiAwaitDrain: false,
//         readingMore: false,
//         decoder: null,
//         encoding: null,
//         [Symbol(kPaused)]: false
//       },
//       _events: [Object: null prototype] {
//         end: [Array],
//         timeout: [Function: socketOnTimeout],
//         data: [Function: bound socketOnData],
//         error: [Function: socketOnError],
//         close: [Array],
//         drain: [Function: bound socketOnDrain],
//         resume: [Function: onSocketResume],
//         pause: [Function: onSocketPause]
//       },
//       _eventsCount: 8,
//       _maxListeners: undefined,
//       _writableState: WritableState {
//         objectMode: false,
//         highWaterMark: 16384,
//         finalCalled: false,
//         needDrain: false,
//         ending: false,
//         ended: false,
//         finished: false,
//         destroyed: false,
//         decodeStrings: false,
//         defaultEncoding: 'utf8',
//         length: 0,
//         writing: false,
//         corked: 0,
//         sync: true,
//         bufferProcessing: false,
//         onwrite: [Function: bound onwrite],
//         writecb: null,
//         writelen: 0,
//         afterWriteTickInfo: null,
//         buffered: [],
//         bufferedIndex: 0,
//         allBuffers: true,
//         allNoop: true,
//         pendingcb: 0,
//         prefinished: false,
//         errorEmitted: false,
//         emitClose: false,
//         autoDestroy: false,
//         errored: null,
//         closed: false,
//         closeEmitted: false
//       },
//       allowHalfOpen: true,
//       _sockname: null,
//       _pendingData: null,
//       _pendingEncoding: '',
//       server: Server {
//         maxHeaderSize: undefined,
//         insecureHTTPParser: undefined,
//         _events: [Object: null prototype],
//         _eventsCount: 2,
//         _maxListeners: undefined,
//         _connections: 2,
//         _handle: [TCP],
//         _usingWorkers: false,
//         _workers: [],
//         _unref: false,
//         allowHalfOpen: true,
//         pauseOnConnect: false,
//         httpAllowHalfOpen: false,
//         timeout: 0,
//         keepAliveTimeout: 5000,
//         maxHeadersCount: null,
//         headersTimeout: 60000,
//         requestTimeout: 0,
//         _connectionKey: '6::::6001',
//         [Symbol(IncomingMessage)]: [Function: IncomingMessage],
//         [Symbol(ServerResponse)]: [Function: ServerResponse],
//         [Symbol(kCapture)]: false,
//         [Symbol(async_id_symbol)]: 16
//       },
//       _server: Server {
//         maxHeaderSize: undefined,
//         insecureHTTPParser: undefined,
//         _events: [Object: null prototype],
//         _eventsCount: 2,
//         _maxListeners: undefined,
//         _connections: 2,
//         _handle: [TCP],
//         _usingWorkers: false,
//         _workers: [],
//         _unref: false,
//         allowHalfOpen: true,
//         pauseOnConnect: false,
//         httpAllowHalfOpen: false,
//         timeout: 0,
//         keepAliveTimeout: 5000,
//         maxHeadersCount: null,
//         headersTimeout: 60000,
//         requestTimeout: 0,
//         _connectionKey: '6::::6001',
//         [Symbol(IncomingMessage)]: [Function: IncomingMessage],
//         [Symbol(ServerResponse)]: [Function: ServerResponse],
//         [Symbol(kCapture)]: false,
//         [Symbol(async_id_symbol)]: 16
//       },
//       parser: HTTPParser {
//         '0': [Function: bound setRequestTimeout],
//         '1': [Function: parserOnHeaders],
//         '2': [Function: parserOnHeadersComplete],
//         '3': [Function: parserOnBody],
//         '4': [Function: parserOnMessageComplete],
//         '5': [Function: bound onParserExecute],
//         '6': [Function: bound onParserTimeout],
//         _headers: [],
//         _url: '',
//         socket: [Circular *1],
//         incoming: [IncomingMessage],
//         outgoing: null,
//         maxHeaderPairs: 2000,
//         _consumed: true,
//         onIncoming: [Function: bound parserOnIncoming],
//         [Symbol(resource_symbol)]: [HTTPServerAsyncResource]
//       },
//       on: [Function: socketListenerWrap],
//       addListener: [Function: socketListenerWrap],
//       prependListener: [Function: socketListenerWrap],
//       _paused: false,
//       _httpMessage: [Circular *2],
//       [Symbol(async_id_symbol)]: 110,
//       [Symbol(kHandle)]: TCP {
//         reading: true,
//         onconnection: null,
//         _consumed: true,
//         [Symbol(owner_symbol)]: [Circular *1]
//       },
//       [Symbol(kSetNoDelay)]: false,
//       [Symbol(lastWriteQueueSize)]: 0,
//       [Symbol(timeout)]: null,
//       [Symbol(kBuffer)]: null,
//       [Symbol(kBufferCb)]: null,
//       [Symbol(kBufferGen)]: null,
//       [Symbol(kCapture)]: false,
//       [Symbol(kBytesRead)]: 0,
//       [Symbol(kBytesWritten)]: 0,
//       [Symbol(RequestTimeout)]: undefined
//     },
//     _header: null,
//     _keepAliveTimeout: 5000,
//     _onPendingData: [Function: bound updateOutgoingData],
//     _sent100: false,
//     _expect_continue: false,
//     req: IncomingMessage {
//       _readableState: ReadableState {
//         objectMode: false,
//         highWaterMark: 16384,
//         buffer: BufferList { head: null, tail: null, length: 0 },
//         length: 0,
//         pipes: [],
//         flowing: true,
//         ended: true,
//         endEmitted: true,
//         reading: false,
//         sync: false,
//         needReadable: false,
//         emittedReadable: false,
//         readableListening: false,
//         resumeScheduled: false,
//         errorEmitted: false,
//         emitClose: true,
//         autoDestroy: false,
//         destroyed: false,
//         errored: null,
//         closed: false,
//         closeEmitted: false,
//         defaultEncoding: 'utf8',
//         awaitDrainWriters: null,
//         multiAwaitDrain: false,
//         readingMore: false,
//         decoder: null,
//         encoding: null,
//         [Symbol(kPaused)]: false
//       },
//       _events: [Object: null prototype] { end: [Function: clearRequestTimeout] },
//       _eventsCount: 1,
//       _maxListeners: undefined,
//       socket: <ref *1> Socket {
//         connecting: false,
//         _hadError: false,
//         _parent: null,
//         _host: null,
//         _readableState: [ReadableState],
//         _events: [Object: null prototype],
//         _eventsCount: 8,
//         _maxListeners: undefined,
//         _writableState: [WritableState],
//         allowHalfOpen: true,
//         _sockname: null,
//         _pendingData: null,
//         _pendingEncoding: '',
//         server: [Server],
//         _server: [Server],
//         parser: [HTTPParser],
//         on: [Function: socketListenerWrap],
//         addListener: [Function: socketListenerWrap],
//         prependListener: [Function: socketListenerWrap],
//         _paused: false,
//         _httpMessage: [Circular *2],
//         [Symbol(async_id_symbol)]: 110,
//         [Symbol(kHandle)]: [TCP],
//         [Symbol(kSetNoDelay)]: false,
//         [Symbol(lastWriteQueueSize)]: 0,
//         [Symbol(timeout)]: null,
//         [Symbol(kBuffer)]: null,
//         [Symbol(kBufferCb)]: null,
//         [Symbol(kBufferGen)]: null,
//         [Symbol(kCapture)]: false,
//         [Symbol(kBytesRead)]: 0,
//         [Symbol(kBytesWritten)]: 0,
//         [Symbol(RequestTimeout)]: undefined
//       },
//       httpVersionMajor: 1,
//       httpVersionMinor: 1,
//       httpVersion: '1.1',
//       complete: true,
//       headers: {
//         'content-type': 'application/json',
//         'user-agent': 'PostmanRuntime/7.29.0',
//         accept: '*/*',
//         'cache-control': 'no-cache',
//         'postman-token': 'ca7484c5-1bd6-4989-8882-c4c73b13aebd',
//         host: 'localhost:6001',
//         'accept-encoding': 'gzip, deflate, br',
//         connection: 'keep-alive',
//         'content-length': '94'
//       },
//       rawHeaders: [
//         'Content-Type',
//         'application/json',
//         'User-Agent',
//         'PostmanRuntime/7.29.0',
//         'Accept',
//         '*/*',
//         'Cache-Control',
//         'no-cache',
//         'Postman-Token',
//         'ca7484c5-1bd6-4989-8882-c4c73b13aebd',
//         'Host',
//         'localhost:6001',
//         'Accept-Encoding',
//         'gzip, deflate, br',
//         'Connection',
//         'keep-alive',
//         'Content-Length',
//         '94'
//       ],
//       trailers: {},
//       rawTrailers: [],
//       aborted: false,
//       upgrade: false,
//       url: '/api/users/create/',
//       method: 'POST',
//       statusCode: null,
//       statusMessage: null,
//       client: <ref *1> Socket {
//         connecting: false,
//         _hadError: false,
//         _parent: null,
//         _host: null,
//         _readableState: [ReadableState],
//         _events: [Object: null prototype],
//         _eventsCount: 8,
//         _maxListeners: undefined,
//         _writableState: [WritableState],
//         allowHalfOpen: true,
//         _sockname: null,
//         _pendingData: null,
//         _pendingEncoding: '',
//         server: [Server],
//         _server: [Server],
//         parser: [HTTPParser],
//         on: [Function: socketListenerWrap],
//         addListener: [Function: socketListenerWrap],
//         prependListener: [Function: socketListenerWrap],
//         _paused: false,
//         _httpMessage: [Circular *2],
//         [Symbol(async_id_symbol)]: 110,
//         [Symbol(kHandle)]: [TCP],
//         [Symbol(kSetNoDelay)]: false,
//         [Symbol(lastWriteQueueSize)]: 0,
//         [Symbol(timeout)]: null,
//         [Symbol(kBuffer)]: null,
//         [Symbol(kBufferCb)]: null,
//         [Symbol(kBufferGen)]: null,
//         [Symbol(kCapture)]: false,
//         [Symbol(kBytesRead)]: 0,
//         [Symbol(kBytesWritten)]: 0,
//         [Symbol(RequestTimeout)]: undefined
//       },
//       _consuming: true,
//       _dumped: false,
//       next: [Function: next],
//       baseUrl: '',
//       originalUrl: '/api/users/create/',
//       _parsedUrl: Url {
//         protocol: null,
//         slashes: null,
//         auth: null,
//         host: null,
//         port: null,
//         hostname: null,
//         hash: null,
//         search: null,
//         query: null,
//         pathname: '/api/users/create/',
//         path: '/api/users/create/',
//         href: '/api/users/create/',
//         _raw: '/api/users/create/'
//       },
//       params: { '0': '/api/users/create/' },
//       query: {},
//       res: [Circular *2],
//       body: {
//         name: 'Ibr Semiu',
//         username: 'semslam@hotmail.com',
//         password: 'password123'
//       },
//       _body: true,
//       length: undefined,
//       route: Route { path: '*', stack: [Array], methods: [Object] },
//       [Symbol(kCapture)]: false,
//       [Symbol(RequestTimeout)]: undefined
//     },
//     locals: [Object: null prototype] {},
//     [Symbol(kCapture)]: false,
//     [Symbol(kNeedDrain)]: false,
//     [Symbol(corked)]: 0,
//     [Symbol(kOutHeaders)]: [Object: null prototype] {
//       'x-powered-by': [ 'X-Powered-By', 'Express' ],
//       'access-control-allow-origin': [ 'Access-Control-Allow-Origin', 'http://localhost:6001' ],
//       vary: [ 'Vary', 'Origin' ]
//     }
//   }